/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2024-05-03 02:45:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.ArrayList;
import com.zumbaapp.servlet.db.DB;
import com.zumbaapp.servlet.model.Participant;

public final class ViewParticipants_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.zumbaapp.servlet.model.Participant");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("com.zumbaapp.servlet.db.DB");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <title>All Participants</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/bootstrap.css\"></link>\n");
      out.write("	<link rel=\"stylesheet\" href=\"style.css\"></link>\n");
      out.write("</head>\n");
      out.write("<body class=\"gradient-background justify-content-center\">\n");
      out.write("\n");
      out.write("        <div class=\"my-4 d-flex justify-content-center col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n");
      out.write("        <div class=\"container-fluid mt-4 mx-5 px-4 py-4 justify-content-center\" style=\"background-color: white; border-radius: 20px;\">\n");
      out.write("        <h1 class=\"mb-3\" style=\"text-align: center;\">All Participants</h1>\n");
      out.write("\n");
      out.write("        ");

            DB db = new DB();
            ArrayList<Participant> zumbaParticipants = db.fetchAllParticipants();
            db.closeConnection();

            if (zumbaParticipants != null && zumbaParticipants.size() > 0) {
                out.print("<table class='table table-hover'>");
                out.print("<thead>");
                out.print("<tr>");
                out.print("<th scope='col'>ID</th>");
                out.print("<th scope='col'>First Name</th>");
                out.print("<th scope='col'>Last Name</th>");
                out.print("<th scope='col'>Email</th>");
                out.print("<th scope='col'>Phone Number</th>");
                out.print("<th scope='col'>Zumba Class</th>");
                out.print("<th scope='col'>Actions</th>");
                out.print("</tr>");
                out.print("</thead>");
                out.print("<tbody>");

                for (Participant participant : zumbaParticipants) {
                    out.print("<tr>");
                    out.print("<td>" + participant.id + "</td>");
                    out.print("<td>" + participant.firstName + "</td>");
                    out.print("<td>" + participant.lastName + "</td>");
                    out.print("<td>" + participant.email + "</td>");
                    out.print("<td>" + participant.phone + "</td>");
                    out.print("<td>" + participant.zumbaClass + "</td>");
                    out.print("<td><a href='DeleteParticipants?id=" + participant.id + "'>Delete</a> | <a href='EditParticipant.jsp?id=" + participant.id + "'>Edit</a></td>");
                    out.print("</tr>");
                }
                out.print("</tbody>");
                out.print("</table>");
            } else {
                out.print("<h3>No Participants Found.</h3>");
            }
            
            out.print("</div>");
            out.print("</div>");
        
      out.write("\n");
      out.write("        <div class=\"container-fluid center d-flex justify-content-center col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\"\">\n");
      out.write("		<a class=\"w-25 btn btn-primary btn-light mt-2 mb-5 mx-3\" href=\"Home.jsp\">Home</a>\n");
      out.write("		<a class=\"w-25 btn btn-primary btn-light mt-2 mb-5 mx-3\" href=\"add-participant.html\">Add Participant</a>\n");
      out.write("		</div>\n");
      out.write("		\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
