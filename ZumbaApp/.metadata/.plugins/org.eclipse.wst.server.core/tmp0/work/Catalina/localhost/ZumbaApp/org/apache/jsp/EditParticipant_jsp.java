/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.15
 * Generated at: 2024-05-03 02:55:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.zumbaapp.servlet.db.DB;
import com.zumbaapp.servlet.model.Participant;

public final class EditParticipant_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.zumbaapp.servlet.model.Participant");
    _jspx_imports_classes.add("com.zumbaapp.servlet.db.DB");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Edit Participant</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"css/bootstrap.css\"></link>\n");
      out.write("<link rel=\"stylesheet\" href=\"style.css\"></link>\n");
      out.write("</head>\n");
      out.write("<body class=\"gradient-background\">\n");
      out.write("        ");

            try {
                int id = Integer.parseInt(request.getParameter("id"));
                DB db = new DB();
                Participant participant = db.fetchParticipant(id);
                if (participant != null) {
        
      out.write("\n");
      out.write("        \n");
      out.write("    <div class=\"my-4 d-flex justify-content-center col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\" data-new-gr-c-s-check-loaded=\"14.1169.0\" data-gr-ext-installed=\"\">\n");
      out.write("	<main class=\"form-signin d-flex justify-content-center\">\n");
      out.write("	\n");
      out.write("	\n");
      out.write("                    <form action='SaveEditedParticipants' method='post'>\n");
      out.write("                   		<div class=\"card\" style=\"width: 25rem;\">\n");
      out.write("                   			<img src=\"assets/Zumba_1.png\" class=\"card-img-top\" alt=\"Rohit smiling\">\n");
      out.write("                   		<div class=\"card-body text-center\">\n");
      out.write("                   		<h1 class=\"mt-4 mb-2 fw-normal text-center\">Zumba by Rohit</h1>\n");
      out.write("						<h4 class=\"mb-4 fw-normal text-center\">Admin Portal</h4>\n");
      out.write("						<h6 class=\"mb-4 fw-normal text-center\">Edit Participant</h6>\n");
      out.write("						<div class=\"form-floating mx-4 my-4\">\n");
      out.write("							<input type=\"hidden\" name=\"id\" value=\"");
      out.print( participant.id );
      out.write("\" class=\"form-control\">\n");
      out.write("						</div>\n");
      out.write("						\n");
      out.write("						<div class=\"form-floating mx-4 my-4\">\n");
      out.write("							<input type=\"text\" name=\"firstName\" value=\"");
      out.print( participant.firstName );
      out.write("\" class=\"form-control\">\n");
      out.write("							<label for=\"floatingInput\">First Name</label>\n");
      out.write("						</div>\n");
      out.write("						\n");
      out.write("						<div class=\"form-floating mx-4 my-4\">\n");
      out.write("							<input type=\"text\" name=\"lastName\" value=\"");
      out.print( participant.lastName );
      out.write("\" class=\"form-control\">\n");
      out.write("							<label for=\"floatingInput\">Last Name</label>\n");
      out.write("						</div>\n");
      out.write("						\n");
      out.write("						<div class=\"form-floating mx-4 my-4\">\n");
      out.write("							<input type=\"text\" name=\"email\" value=\"");
      out.print( participant.email );
      out.write("\" class=\"form-control\">\n");
      out.write("							<label for=\"floatingInput\">Email</label>\n");
      out.write("						</div>\n");
      out.write("						\n");
      out.write("						<div class=\"form-floating mx-4 my-4\">\n");
      out.write("							<input type=\"text\" name=\"phone\" value=\"");
      out.print( participant.phone );
      out.write("\" class=\"form-control\">\n");
      out.write("							<label for=\"floatingInput\">Phone</label>\n");
      out.write("						</div>\n");
      out.write("						\n");
      out.write("						<div class=\"form-floating mx-4 my-4\">\n");
      out.write("							<input type=\"text\" name=\"zumbaClass\" value=\"");
      out.print( participant.zumbaClass );
      out.write("\" class=\"form-control\">\n");
      out.write("							<label for=\"floatingInput\">Zumba Class</label>\n");
      out.write("						</div>\n");
      out.write("						\n");
      out.write("						<div class=\"mx-4 my-4\">\n");
      out.write("							<button class=\"w-100 btn btn-lg btn-primary button\" type=\"submit\">Save</button>\n");
      out.write("						</div>\n");
      out.write("						\n");
      out.write("						<div class=\"my-4\">\n");
      out.write("							<p style=\"color: #458933;\"><a href=\"Home.jsp\">Return Home</a>   |   <a href=\"ViewParticipants.jsp\">View Classes</a></p>\n");
      out.write("						</div>\n");
      out.write("						\n");
      out.write("                    </form>\n");
      out.write("        ");

                } else {
                    out.println("<p>Participant not found.</p>");
                }
            } catch (NumberFormatException e) {
                out.println("<p>Error: Invalid ID format.</p>");
            }
        
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
